apiVersion: v1
kind: ServiceAccount
metadata:
  name: greeting-kafka-operator
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: greeting-kafka-operator
rules:
  - apiGroups: ["arnecdn.github.com"]
    resources: ["kafkatopics"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: greeting-kafka-operator
subjects:
  - kind: ServiceAccount
    name: greeting-kafka-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: greeting-kafka-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greeting-kafka-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: greeting-kafka-operator
  template:
    metadata:
      labels:
        app: greeting-kafka-operator
    spec:
      serviceAccountName: greeting-kafka-operator
      containers:
        - name: greeting-kafka-operator
          image: docker.io/arnecdn/greeting-kafka-operator:0.2
          imagePullPolicy: IfNotPresent
          env:
            - name: APP__KAFKA__BROKER
              value: "kafka-service:9093"
            - name: APP__OTEL_COLLECTOR__OLTP_ENDPOINT
              value: "http://grafana-alloy:4317"
            - name: APP__KUBE__MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          command:
          - "/usr/bin/server"
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: kafkatopics.arnecdn.github.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: arnecdn.github.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                topic:
                  type: string
                partitions:
                  type: integer
                replicationFactor:
                  type: integer
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: kafkatopics
    # singular name to be used as an alias on the CLI and for display
    singular: kafkatopic
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: KafkaTopic
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - kt